---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: server-service
    spec:
      selector:
        app: gnome-nepal-server  # Updated to match Deployment labels
      ports:
        - name: http  # Added port name
          port: 8000
          targetPort: 8000

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: gnome-nepal-server-deployment
    labels:
      app: gnome-nepal-server  # Added labels to metadata
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: gnome-nepal-server  # Ensured consistency
      template:
        metadata:
          labels:
            app: gnome-nepal-server  # Ensured consistency
        spec:
          imagePullSecrets:
            - name: n1rjal-test

          containers:
            - name: gnome-nepal-server
              image: ghcr.io/n1rjal/site-server/gnome-nepal-backend:nightly
              ports:
                - name: http
                  containerPort: 8000
                  appProtocol: http
              env:
                - name: DJANGO_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_SECRET_KEY
                - name: CACHE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: CACHE_HOST
                - name: CELERY_BROKER_URL
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: CELERY_BROKER_URL
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DB_NAME
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DB_USER
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DB_PASSWORD
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DB_HOST
                - name: DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DB_PORT
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: SENTRY_DSN
                - name: DJANGO_DEBUG
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_DEBUG
                - name: DJANGO_ALLOWED_HOSTS
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_ALLOWED_HOSTS
                - name: DJANGO_ADMIN_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_ADMIN_USERNAME
                - name: DJANGO_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_ADMIN_PASSWORD
                - name: DJANGO_ADMIN_EMAIL
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DJANGO_ADMIN_EMAIL
                - name: DOCKERFILE_TARGET
                  valueFrom:
                    secretKeyRef:
                      name: django-server-secret
                      key: DOCKERFILE_TARGET
              volumeMounts:
                - name: server-storage
                  mountPath: /path/to/mount  # Replace with the actual path where you want to mount the volume
          volumes:
            - name: server-storage
              persistentVolumeClaim:
                claimName: server-storage

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: server-storage
      labels:
        app: gnome-nepal-server  # Updated to match labels
    spec:
      accessModes:
        - ReadWriteOnce
      resources:  # Corrected from 'resource' to 'resources'
        requests:  # Corrected from 'request' to 'requests'
          storage: 2Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: django-server-secret
type: Opaque
data:
  DJANGO_SECRET_KEY: cXdyZXdlM3IyMzQyMzQ9LT0rMjM0d3dyZXJlcmVyZXI=  # Base64 encoded value
  CACHE_HOST: cmVkaXM6Ly9sb2NhbGhvc3Q6NjM3OS8w  # Base64 encoded value
  CELERY_BROKER_URL: cmVkaXM6Ly9yZWRpczo2Mzc5LzE=  # Base64 encoded value
  DB_NAME: cG9zdGdyZXM=  # Base64 encoded value
  DB_USER: cG9zdGdyZXM=  # Base64 encoded value
  DB_PASSWORD: cG9zdGdyZXM=  # Base64 encoded value
  DB_HOST: cG9zdGdyZXMtc2VydmljZQ==  # Corrected Base64 value
  DB_PORT: NTQzMg==  # Base64 encoded value
  SENTRY_DSN: ""  # Empty string, no encoding needed
  DJANGO_DEBUG: RkFMU0U=  # Corrected Base64 value (for "FALSE")
  DJANGO_ALLOWED_HOSTS: MTI3LjAuMC4xLGxvY2FsaG9zdA==  # Base64 encoded value
  DJANGO_ADMIN_USERNAME: Z25vbWVfYWRtaW4=  # Base64 encoded value
  DJANGO_ADMIN_PASSWORD: YWRtaW4xMjM0NQ==  # Base64 encoded value
  DJANGO_ADMIN_EMAIL: YWRtaW5AZGphbmdvLmNvbQ==  # Base64 encoded value
  DOCKERFILE_TARGET: cHJvZHVjdGlvbg==  # Base64 encoded value (for "production")

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: server-route
spec:
  to:
    kind: Service
    name: server-service
  port:
    targetPort: http  # Use the port name defined in the Service
  tls:
    termination: edge
